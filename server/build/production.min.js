var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",
callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),
!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a);
})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),
b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),
app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){
b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();
return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"
}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0]);
})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");
require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");
module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");
module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){
db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){
console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");
require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");
module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");
module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){
db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){
console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");
require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");
module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");
module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){
db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){
console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");
require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");
module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");
module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){
db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){
console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");
require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");
module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");
module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){
db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){
console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");
require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"student",port:5432,password:"",ssl:!1};var User=require("../models/userModel.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,bcrypt=require("bcrypt"),flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,b)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:"postgres"});module.exports=db;var db=require("../db/db.js");module.exports.addTask=function(a){var b=Object.keys(a).sort();return b!==["description","points","sprint_id","status","title","user_id"]?!1:void db("features").insert(a).returning("id").then(function(a){return console.log("Task inserted at id: "+a),!0},function(a){return console.error(a),!1})},module.exports.getAllTasks=function(a){db.select("*").from("features").where("sprint_id",a).then(function(a){return a},function(a){console.error(a)})},module.exports.getCompleteTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"complete"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getInProgressTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"inprogress"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getToDoTasks=function(a){db.select("*").from("features").where({sprint_id:a,status:"todo"}).then(function(a){return a},function(a){console.error(a)})},module.exports.getTasksByStatus=function(a,b){db.select("*").from("features").where({sprint_id:a,status:b}).then(function(a){return a},function(a){console.error(a)})},module.exports.getCommentsOnTask=function(a){db.select("*").from("comments").where("feature_id",a).then(function(a){return a},function(a){console.error(a)})};var db=require("../db/db.js"),bcrypt=require("bcrypt");exports.addUser=function(a,b){db("users").insert({email:a.email,username:a.username,github_id:a.github_id}).then(function(){})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b};var User=require("./models/userModel"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){b.redirect("/#/storyboard")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.urlencoded({extended:!1})),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);