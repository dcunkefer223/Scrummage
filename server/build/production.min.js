var passport=require("passport");exports.authorizeForAPI=function(a,b,c){a.isAuthenticated()?c():b.sendStatus(403)},exports.checkUser=function(a,b,c){return a.isAuthenticated()?b.json({permission:!0}):b.json({permission:!1})},exports.pgData={host:"localhost",database:"postgres",user:"davidunkefer",port:5432,password:"",ssl:!1};var User=require("../requestHandlers/userHandler.js"),passport=require("passport"),GithubStrategy=require("passport-github").Strategy,LocalStrategy=require("passport-local").Strategy,flash=require("connect-flash");module.exports=function(a){a.serializeUser(function(a,b){b(null,a.github_id)}),a.deserializeUser(function(a,b){User.findUserByGithubId(a,function(a,c){c?b(null,c):b(a,null)})}),a.use(new GithubStrategy({clientID:"3cf6f618800a697e2bc5",clientSecret:"b160a044255899ac3cc086064b8783ff40fd0c23",callbackURL:"http://127.0.0.1:3000/auth/github/callback",passReqToCallback:!0},function(a,b,c,d,e){process.nextTick(function(){var a=d.id;User.findUserByGithubId(a,function(a,b){if(a)return e(a);if(b)return e(null,b);var c={};c.github_id=d.id,c.username=d.username,c.email=d.emails[0].value,User.addUser(c,function(a,b){if(a)throw a;return e(null,c)})})})}))};var pg=require("pg"),auth=process.env.DATABASE_URL?null:require("../config/authStore.js"),db=require("knex")({client:"pg",connection:auth.pgData});module.exports=db;var db=require("../db/db.js");module.exports.addFeature=function(a,b){return db("features").insert(a).returning("id")},module.exports.addCommentToFeature=function(a,b){db("comments").insert(a).returning("id").then(function(a){console.log("Comment inserted at id: "+a),b.status(201).send({comment_id:a[0]})},function(a){console.error(a),b.status(500).send("Failed to insert comment into database")})},module.exports.changeFeatureStatus=function(a,b,c){return db("features").where("id",a).update("status",b)},module.exports.changeFeaturePoints=function(a,b,c){db("features").where("id",a).update("points",b).then(function(b){c.status(200).send({feature_id:a})},function(a){console.error(a),c.status(500).send("Failed to update feature in database")})},module.exports.changeFeatureDescription=function(a,b,c){db("features").where("id",a).update("description",b).then(function(b){c.status(200).send({feature_id:a})},function(a){console.error(a),c.status(500).send("Failed to update feature in database")})},module.exports.changeFeatureName=function(a,b,c){db("features").where("id",a).update("name",b).then(function(b){c.status(200).send({feature_id:a})},function(a){console.error(a),c.status(500).send("Failed to update feature in database")})},module.exports.changeFeatureUser=function(a,b,c){db("features").where("id",a).update("team_id",b).then(function(b){c.status(200).send({feature_id:a})},function(a){console.error(a),c.status(500).send("Failed to update feature in database")})},module.exports.getAllFeatures=function(a,b){db.select("*").from("features").where("team_id",a).then(function(a){b.status(200).send(a)},function(a){console.error(a),b.status(404).send("Failed to find request resource in database")})},module.exports.getCompleteFeatures=function(a,b){db.select("*").from("features").where({team_id:a,status:"complete"}).then(function(a){b.status(200).send(a)},function(a){console.error(a),b.status(404).send("Failed to find request resource in database")})},module.exports.getInProgressFeatures=function(a,b){db.select("*").from("features").where({team_id:a,status:"inprogress"}).then(function(a){b.status(200).send(a)},function(a){console.error(a),b.status(404).send("Failed to find request resource in database")})},module.exports.getToDoFeatures=function(a,b){db.select("*").from("features").where({team_id:a,status:"todo"}).then(function(a){b.status(200).send(a)},function(a){console.error(a),b.status(404).send("Failed to find request resource in database")})},module.exports.getFeaturesByStatus=function(a,b,c){db.select("*").from("features").where({team_id:a,status:b}).then(function(a){c.status(200).send(a)},function(a){console.error(a),c.status(404).send("Failed to find request resource in database")})},module.exports.getCommentsOnFeature=function(a,b){db.select("*").from("comments").where("id",a).then(function(a){b.status(200).send(a)},function(a){console.error(a),b.status(404).send("Failed to find request resource in database")})},module.exports.changeTeamPoints=function(a,b,c){db("teams").where("id",a).update("points",b).then(function(d){c.status(200).send({team_id:a,points:b})},function(a){console.error(a),c.status(500).send("Failed to update feature in database")})},module.exports.getStatusById=function(a){return db.select("status").from("features").where("id",a)};var db=require("../db/db.js");module.exports.getTeam=function(a,b){return db.select("*").from("teams").where("id",a)},module.exports.fetchPoints=function(a,b){return console.log("in team model we see",a,b),db.select(b).from("teams").where("id",a)},module.exports.changePoints=function(a,b,c){return db("teams").where("id",a).update(b,JSON.stringify(c))};var db=require("../db/db.js");exports.addUser=function(a,b){db("users").insert(a).returning("id").then(function(a){console.log("User inserted at: "+a[0]),b(null,a)},function(a){console.error(a),b(a,null)})},exports.findUserByGithubId=function(a,b){db.select("*").from("users").where("github_id",a).then(function(a){b(null,a[0])},function(a){console.error(a),b(a,null)})},exports.findLocalUser=function(a,b){db.select("*").from("users").where("email",a).then(function(a){console.log("Logged here "),b(null,a[0])})},exports.addLocalUser=function(a,b){db("users").insert({email:a.email,password:a.password}).then(function(){console.log("Local user inserted")})},exports.generateHash=function(a){var b=bcrypt.hashSync(a,10);return console.log("password: "+a+" hash: "+b),b},exports.fetchTeamName=function(a,b){return db.select("id").from("teams").where("name",a)},exports.changeTeamId=function(a,b){return db("users").where("id",a).update("team_id",b)},exports.createTeam=function(a,b){return console.log("newTeam in model looks like",a),db("teams").insert(a).returning("id")};var taskModel=require("../models/taskModel.js"),teamModel=require("../models/teamModel.js");module.exports.addFeature=function(a,b,c){var d,e;taskModel.addFeature({name:a.name,description:a.description,points:a.points,status:a.status,team_id:b.team_id,user_id:b.id},c).then(function(c){return e=c[0],teamModel.fetchPoints(b.team_id,a.status)}).then(function(c){return d=JSON.parse(c[0][a.status]),d[d.length-1]+=parseInt(a.points,10),teamModel.changePoints(b.team_id,a.status,d)}).then(function(a){console.log("Feature inserted at id: "+e),c.status(201).send({feature_id:e})})["catch"](function(a){console.error(a),c.status(500).send("Error while inserting feature into database")})},module.exports.addCommentToFeature=function(a,b){taskModel.addCommentToFeature(a,b)},module.exports.changeFeatureStatus=function(a,b,c){var d,e;console.log("the user looks like",b),taskModel.getStatusById(a.feature_id).then(function(a){return e=a[0].status,teamModel.fetchPoints(b.team_id,e)}).then(function(c){return d=JSON.parse(c[0][e]),d[d.length-1]-=parseInt(a.points,10),teamModel.changePoints(b.team_id,e,d)}).then(function(){return taskModel.changeFeatureStatus(a.feature_id,a.status,c)}).then(function(){return e=a.status,teamModel.fetchPoints(b.team_id,e)}).then(function(c){return d=JSON.parse(c[0][e]),d[d.length-1]+=parseInt(a.points,10),teamModel.changePoints(b.team_id,e,d)}).then(function(){c.status(200).send({feature_id:a.feature_id})})["catch"](function(a){console.error(a)})},module.exports.changeFeaturePoints=function(a,b){taskModel.changeFeaturePoints(a.feature_id,a.points,b)},module.exports.changeFeatureDescription=function(a,b){taskModel.changeFeatureDescription(a.feature_id,a.description,b)},module.exports.changeFeatureName=function(a,b){taskModel.changeFeatureName(a.feature_id,a.name,b)},module.exports.changeFeatureUser=function(a,b){taskModel.changeFeatureUser(a.feature_id,a.user_id,b)},module.exports.getAllFeatures=function(a,b){taskModel.getAllFeatures(a,b)},module.exports.getFeaturesByStatus=function(a,b,c){taskModel.getFeaturesByStatus(a,b,c)},module.exports.getCommentsOnFeature=function(a,b){taskModel.getCommentsOnFeature(a,b)},module.exports.changeTeamPoints=function(a,b){taskModel.changeTeamPoints(a.team_id,a.points,b)};var teamModel=require("../models/teamModel.js"),taskModel=require("../models/taskModel.js");module.exports.getTeam=function(a,b){teamModel.getTeam(a,b).then(function(a){a[0].backlog=JSON.parse(a[0].backlog),a[0].progress=JSON.parse(a[0].progress),a[0].complete=JSON.parse(a[0].complete),b.status(200).send(a[0])})["catch"](function(a){console.error(a),b.status(404).send("Failed to find request resource in database")})};var userModel=require("../models/userModel.js");module.exports.addUser=function(a,b){userModel.addUser(a,b)},module.exports.findUserByGithubId=function(a,b){userModel.findUserByGithubId(a,b)},module.exports.changeUserTeam=function(a,b,c){userModel.fetchTeamName(a.name,c).then(function(a){return userModel.changeTeamId(b.id,a[0].id)}).then(function(a){c.status(201).send({team_id:a[0]})})},module.exports.createTeam=function(a,b,c){var d=JSON.stringify([0]);a.name;userModel.createTeam({name:a.name,backlog:d,progress:d,complete:d},c).then(function(b){return userModel.fetchTeamName(a.name)}).then(function(a){return userModel.changeTeamId(b.id,a[0].id)}).then(function(a){c.status(201).send({team_id:a[0]})})};var User=require("./requestHandlers/userHandler.js"),Task=require("./requestHandlers/taskHandler.js"),Team=require("./requestHandlers/teamHandler.js"),passport=require("passport"),authStore=require("./config/authStore");module.exports=function(a){a.get("/auth/github",passport.authenticate("github")),a.get("/auth/github/callback",passport.authenticate("github",{failureRedirect:"/#/signin"}),function(a,b){a.user.team_id?b.redirect("/#/storyboard"):b.redirect("/#/teamsetup")}),a.get("/logout",function(a,b){a.logout(),b.redirect("/")}),a.get("/getteam",function(a,b){Team.getTeam(a.query.team_id,b)}),a.get("/getallfeatures",function(a,b){console.log(a.user),Task.getAllFeatures(a.user.team_id,b)}),a.get("/getfeaturesbystatus",function(a,b){Task.getFeaturesByStatus(a.query.team_id,a.query.status,b)}),a.get("/getcomments",function(a,b){Task.getCommentsOnFeature(a.query.feature_id,b)}),a.post("/addfeature",function(a,b){Task.addFeature(a.body,a.user,b)}),a.post("/addcomment",function(a,b){Task.addCommentToFeature(a.body,b)}),a.post("/changestatus",function(a,b){Task.changeFeatureStatus(a.body,a.user,b)}),a.post("/changefeaturepoints",function(a,b){Task.changeFeaturePoints(a.body,b)}),a.post("/changedesc",function(a,b){Task.changeFeatureDescription(a.body,b)}),a.post("/changename",function(a,b){Task.changeFeatureName(a.body,b)}),a.post("/changefeatureuser",function(a,b){Task.changeFeatureUser(a.body,b)}),a.post("/updatetotalpoints",function(a,b){Task.changeTeamPoints(a.body,b)}),a.post("/changeuserteam",function(a,b){User.changeUserTeam(a.body,a.user,b)}),a.post("/addteam",function(a,b){User.createTeam(a.body,a.user,b)}),a.get("/createsprint",function(a,b){Sprint.createSprint(a.body,a.user,b)})};var express=require("express"),app=express(),port=process.env.PORT||3e3,routes=require(__dirname+"/routes.js"),session=require("express-session"),morgan=require("morgan"),bodyParser=require("body-parser"),passport=require("passport"),flash=require("connect-flash");require("./config/passport")(passport),app.use(bodyParser.json()),app.use(function(a,b,c,d){a?(console.error(a),c.status(400).send("Invalid JSON request")):d()}),app.use(session({secret:"anystringoftext",saveUninitialized:!0,resave:!0})),app.use(passport.initialize()),app.use(passport.session()),app.use(flash()),app.use(express["static"](__dirname+"/../client")),app.engine("html",require("ejs").renderFile),routes(app),app.listen(port),console.log("Scrummage server running on port: "+port);